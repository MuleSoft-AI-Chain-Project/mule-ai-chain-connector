<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ms-aichain="http://www.mulesoft.org/schema/mule/ms-aichain"
	  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	  xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns="http://www.mulesoft.org/schema/mule/core"
	  xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
	  http://www.mulesoft.org/schema/mule/ms-aichain http://www.mulesoft.org/schema/mule/ms-aichain/current/mule-ms-aichain.xsd">
	<munit:config name="langchain-embedding-operation-testing-suite.xml" />
	<munit:test name="EmbeddingNewStore-test" doc:id="b794e6e8-779e-494a-9f95-d461103b7bbd" >
		<munit:execution>
			<ms-aichain:embedding-new-store doc:name="Embedding new store" doc:id="8f4b53ec-f238-4af0-bc9b-f18bc8ef579a" storeName="target/embedding.store"/>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert doc:name="Assert payload" doc:id="66b00019-9817-4ab9-b5bb-6746bcba1d61" message="Unable to create the embedding store">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import * from dw::test::Asserts
---
payload.status must contain("created")]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>

	<munit:test name="EmbeddingAddFile-test" doc:id="3fea6933-396d-4a2b-813e-ae9248021548" >
		<munit:behavior>
			<ms-aichain:embedding-new-store doc:name="Embedding new store" doc:id="8f4b53ec-f238-4af0-bc9b-f18bc8ef579a" storeName="target/embedding.store"/>
		</munit:behavior>
		<munit:execution>
			<ms-aichain:embedding-add-document-to-store doc:name="Embedding add document to store" doc:id="7f5feb33-8302-4c06-a358-a23267b808fb" storeName="target/embedding.store" contextPath='${app.home}/embeddingaddfiletest/Foundations_for_High_Scalability_in_Mule_4.pdf' fileType="any" maxSegmentSizeInChars="2000" maxOverlapSizeInChars="200"/>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert doc:name="Assert payload" doc:id="e2aad1f1-8fe4-4133-b812-7a947fa9a8f3" message="Unable to embed the file into the store">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import * from dw::test::Asserts
---
payload.status must contain("updated")]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>

	<munit:test name="RAG-test" doc:id="36e4172f-0a2c-4c2e-9546-8f4f30c6cc93" >
		<munit:execution >
			<ms-aichain:rag-load-document doc:name="Rag load document" doc:id="66b215ae-fab5-4da9-ac91-ebe1c60d6a7b" config-ref="OPENAI" contextPath='${app.home}/embeddingaddfiletest/Foundations_for_High_Scalability_in_Mule_4.pdf' fileType="any">
				<ms-aichain:data>
					What is mule 4?
				</ms-aichain:data>
			</ms-aichain:rag-load-document>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="6f7421e7-5327-45b3-8247-54497e0ccd2e" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import * from dw::test::Asserts
---
payload.response must contain("reactive programming")]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
</mule>